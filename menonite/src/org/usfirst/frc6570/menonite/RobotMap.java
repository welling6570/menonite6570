// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc6570.menonite;

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import edu.wpi.first.wpilibj.AnalogGyro;
import edu.wpi.first.wpilibj.CounterBase.EncodingType;
import edu.wpi.first.wpilibj.DoubleSolenoid;
import edu.wpi.first.wpilibj.Encoder;
import edu.wpi.first.wpilibj.PIDSourceType;
import edu.wpi.first.wpilibj.Spark;
import edu.wpi.first.wpilibj.SpeedController;
import edu.wpi.first.wpilibj.SpeedControllerGroup;
import edu.wpi.first.wpilibj.Ultrasonic;
import edu.wpi.first.wpilibj.drive.DifferentialDrive;

// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import edu.wpi.first.wpilibj.livewindow.LiveWindow;

/**
 * The RobotMap is a mapping from the ports sensors and actuators are wired into
 * to a variable name. This provides flexibility changing wiring, makes checking
 * the wiring easier and significantly reduces the number of magic numbers
 * floating around.
 */
public class RobotMap {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    public static DoubleSolenoid clawBoigrabbyboi;
    public static SpeedController driveyboileft1;
    public static SpeedController driveyboileft2;
    public static SpeedControllerGroup driveyboileftSc;
    public static SpeedController driveyboiright1;
    public static SpeedController driveyboiright2;
    public static SpeedControllerGroup driveyboirightSc;
    public static DifferentialDrive driveyboidrivetrain;
    public static Encoder driveyboiwheelencoder;
    public static AnalogGyro driveyboigyroBoi;
    public static Ultrasonic driveyboiultraBoi;
    public static Encoder liftyBoiliftencoder;
    public static SpeedController liftyBoiliftmotor;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    @SuppressWarnings("deprecation")
	public static void init() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
        clawBoigrabbyboi = new DoubleSolenoid(0, 0, 1);
        LiveWindow.addActuator("clawBoi", "grabbyboi", clawBoigrabbyboi);
        
        driveyboileft1 = new Spark(0);
        LiveWindow.addActuator("driveyboi", "left1", (Spark) driveyboileft1);
        driveyboileft1.setInverted(false);
        driveyboileft2 = new Spark(1);
        LiveWindow.addActuator("driveyboi", "left2", (Spark) driveyboileft2);
        driveyboileft2.setInverted(false);
        driveyboileftSc = new SpeedControllerGroup(driveyboileft1, driveyboileft2  );
        LiveWindow.addActuator("driveyboi", "leftSc", driveyboileftSc);
        
        driveyboiright1 = new Spark(2);
        LiveWindow.addActuator("driveyboi", "right1", (Spark) driveyboiright1);
        driveyboiright1.setInverted(false);
        driveyboiright2 = new Spark(3);
        LiveWindow.addActuator("driveyboi", "right2", (Spark) driveyboiright2);
        driveyboiright2.setInverted(false);
        driveyboirightSc = new SpeedControllerGroup(driveyboiright1, driveyboiright2  );
        LiveWindow.addActuator("driveyboi", "rightSc", driveyboirightSc);
        
        driveyboidrivetrain = new DifferentialDrive(driveyboileftSc, driveyboirightSc);
        LiveWindow.addActuator("driveyboi", "drivetrain", driveyboidrivetrain);
        driveyboidrivetrain.setSafetyEnabled(true);
        driveyboidrivetrain.setExpiration(0.1);
        driveyboidrivetrain.setMaxOutput(1.0);

        driveyboiwheelencoder = new Encoder(0, 1, false, EncodingType.k4X);
        LiveWindow.addSensor("driveyboi", "wheelencoder", driveyboiwheelencoder);
        driveyboiwheelencoder.setDistancePerPulse(1.0);
        driveyboiwheelencoder.setPIDSourceType(PIDSourceType.kDisplacement);
        driveyboigyroBoi = new AnalogGyro(0);
        LiveWindow.addSensor("driveyboi", "gyroBoi", driveyboigyroBoi);
        driveyboigyroBoi.setSensitivity(0.007);
        driveyboiultraBoi = new Ultrasonic(4, 5);
        LiveWindow.addSensor("driveyboi", "ultraBoi", driveyboiultraBoi);
        
        liftyBoiliftencoder = new Encoder(2, 3, false, EncodingType.k4X);
        LiveWindow.addSensor("liftyBoi", "liftencoder", liftyBoiliftencoder);
        liftyBoiliftencoder.setDistancePerPulse(1.0);
        liftyBoiliftencoder.setPIDSourceType(PIDSourceType.kDisplacement);
        liftyBoiliftmotor = new Spark(4);
        LiveWindow.addActuator("liftyBoi", "liftmotor", (Spark) liftyBoiliftmotor);
        liftyBoiliftmotor.setInverted(false);

        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    }
}
